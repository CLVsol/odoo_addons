-
  In order to check Survey Request of the clv_survey "Initial Partner Feedback" I create a Survey Request for clv_survey "Initial Partner Feedback".
-
  !record {model: clv_survey.request, id: clv_survey_request_1}:
    survey_id: clv_survey_Initial_partner_feedback
    user_id: base.user_demo
-
  !assert {model: clv_survey.request, id: clv_survey_request_1, string: Survey Request should be in draft state}:
    - state == 'draft'
-
  I set Survey Request for the clv_survey in waiting state.
-
  !python {model: clv_survey.request}: |
    self.clv_survey_req_waiting_answer(cr, uid, [ref("clv_survey_request_1")], context)
-
  I check that state of Survey Request for the clv_survey is waiting or not.
-
  !assert {model: clv_survey.request, id: clv_survey_request_1, severity: error, string: Survey Request should be in waiting state}:
    - state == 'waiting_answer'
-
  I cancel the Survey Request of the clv_survey.
-
  !python {model: clv_survey.request}: |
    self.clv_survey_req_cancel(cr, uid, [ref("clv_survey_request_1")], context)
-
  I check that state of Survey Request of the clv_survey is cancel or not.
-
  !assert {model: clv_survey.request, id: clv_survey_request_1, severity: error, string: Survey Request should be in cancel state}:
    - state == 'cancel'
-
  I set Survey Request of the clv_survey in draft state.
-
  !python {model: clv_survey.request}: |
    self.clv_survey_req_draft(cr, uid, [ref("clv_survey_request_1")], context)
-
  I check that state of Survey request of the clv_survey is draft or not.
-
  !assert {model: clv_survey.request, id: clv_survey_request_1, severity: error, string: Survey Request should be in draft state}:
    - state == 'draft'
-
  I set clv_survey request of the clv_survey in done state.
-
  !python {model: clv_survey.request}: |
    self.clv_survey_req_waiting_answer(cr, uid, [ref("clv_survey_request_1")], context)
    self.clv_survey_req_done(cr, uid, [ref("clv_survey_request_1")], context)
-
  I check that state of Survey request of the clv_survey is done or not.
-
  !assert {model: clv_survey.request, id: clv_survey_request_1, severity: error, string: Survey Request should be in done state}:
    - state == 'done'
